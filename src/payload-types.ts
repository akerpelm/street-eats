/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    vendors: Vendor;
    menuItems: MenuItem;
    ratings: Rating;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    vendors: VendorsSelect<false> | VendorsSelect<true>;
    menuItems: MenuItemsSelect<false> | MenuItemsSelect<true>;
    ratings: RatingsSelect<false> | RatingsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vendors".
 */
export interface Vendor {
  id: number;
  name: string;
  slug: string;
  description?: string | null;
  /**
   * @minItems 2
   * @maxItems 2
   */
  location?: [number, number] | null;
  addresses?:
    | {
        street?: string | null;
        city?: string | null;
        borough?: string | null;
        state?: string | null;
        zip?: string | null;
        primary?: boolean | null;
        id?: string | null;
      }[]
    | null;
  contact?: {
    phone?: string | null;
    email?: string | null;
  };
  socialMedia?: {
    facebook?: string | null;
    instagram?: string | null;
    twitter?: string | null;
  };
  image?: (number | null) | Media;
  menuItems?: (number | MenuItem)[] | null;
  hours?: {
    monday?: {
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      start?: string | null;
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      end?: string | null;
    };
    tuesday?: {
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      start?: string | null;
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      end?: string | null;
    };
    wednesday?: {
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      start?: string | null;
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      end?: string | null;
    };
    thursday?: {
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      start?: string | null;
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      end?: string | null;
    };
    friday?: {
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      start?: string | null;
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      end?: string | null;
    };
    saturday?: {
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      start?: string | null;
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      end?: string | null;
    };
    sunday?: {
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      start?: string | null;
      /**
       * Enter time in 12-hour (9:00 AM) or 24-hour (13:00) format
       */
      end?: string | null;
    };
  };
  cuisine:
    | 'Mexican'
    | 'Asian'
    | 'Middle Eastern'
    | 'American'
    | 'Mediterranean'
    | 'Italian'
    | 'Indian'
    | 'Caribbean'
    | 'Greek'
    | 'Other';
  ratings?: {
    averageRating?: {
      foodQuality?: number | null;
      service?: number | null;
      value?: number | null;
      atmosphere?: number | null;
    };
    recommendationPercentage?: number | null;
    totalReviews?: number | null;
    popularTags?:
      | {
          tag?: string | null;
          count?: number | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menuItems".
 */
export interface MenuItem {
  id: number;
  name: string;
  description?: string | null;
  price: number;
  spiceLevel?: ('None' | 'Mild' | 'Medium' | 'Hot' | 'Extra Hot' | 'You Pick') | null;
  category: 'Starters' | 'Main' | 'Salads' | 'Desserts' | 'Drinks';
  image?: (number | null) | Media;
  glutenFree?: boolean | null;
  vegan?: boolean | null;
  vegetarian?: boolean | null;
  allergens?: ('Nuts' | 'Dairy' | 'Soy' | 'Gluten' | 'Eggs' | 'Shellfish' | 'Fish')[] | null;
  calories?: number | null;
  ratings?: {
    averageRating?: {
      taste?: number | null;
      presentation?: number | null;
      portionSize?: number | null;
    };
    recommendationPercentage?: number | null;
    totalReviews?: number | null;
    popularTags?:
      | {
          tag?: string | null;
          count?: number | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ratings".
 */
export interface Rating {
  id: number;
  user: number | User;
  ratingType: 'vendor' | 'menuItem';
  vendor?: (number | null) | Vendor;
  menuItem?: (number | null) | MenuItem;
  vendorRating?: {
    foodQuality: number;
    service: number;
    value: number;
    atmosphere?: number | null;
    recommend: boolean;
  };
  menuItemRating?: {
    taste: number;
    presentation: number;
    portionSize: number;
    recommend: boolean;
  };
  comment?: string | null;
  tags?:
    | (
        | 'Spicy'
        | 'Mild'
        | 'Large Portion'
        | 'Small Portion'
        | 'Great Value'
        | 'Expensive'
        | 'Quick Service'
        | 'Slow Service'
        | 'Fresh'
        | 'Authentic'
        | 'Innovative'
        | 'Worth the Wait'
        | 'Hidden Gem'
      )[]
    | null;
  images?:
    | {
        image: number | Media;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'vendors';
        value: number | Vendor;
      } | null)
    | ({
        relationTo: 'menuItems';
        value: number | MenuItem;
      } | null)
    | ({
        relationTo: 'ratings';
        value: number | Rating;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vendors_select".
 */
export interface VendorsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  location?: T;
  addresses?:
    | T
    | {
        street?: T;
        city?: T;
        borough?: T;
        state?: T;
        zip?: T;
        primary?: T;
        id?: T;
      };
  contact?:
    | T
    | {
        phone?: T;
        email?: T;
      };
  socialMedia?:
    | T
    | {
        facebook?: T;
        instagram?: T;
        twitter?: T;
      };
  image?: T;
  menuItems?: T;
  hours?:
    | T
    | {
        monday?:
          | T
          | {
              start?: T;
              end?: T;
            };
        tuesday?:
          | T
          | {
              start?: T;
              end?: T;
            };
        wednesday?:
          | T
          | {
              start?: T;
              end?: T;
            };
        thursday?:
          | T
          | {
              start?: T;
              end?: T;
            };
        friday?:
          | T
          | {
              start?: T;
              end?: T;
            };
        saturday?:
          | T
          | {
              start?: T;
              end?: T;
            };
        sunday?:
          | T
          | {
              start?: T;
              end?: T;
            };
      };
  cuisine?: T;
  ratings?:
    | T
    | {
        averageRating?:
          | T
          | {
              foodQuality?: T;
              service?: T;
              value?: T;
              atmosphere?: T;
            };
        recommendationPercentage?: T;
        totalReviews?: T;
        popularTags?:
          | T
          | {
              tag?: T;
              count?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menuItems_select".
 */
export interface MenuItemsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  spiceLevel?: T;
  category?: T;
  image?: T;
  glutenFree?: T;
  vegan?: T;
  vegetarian?: T;
  allergens?: T;
  calories?: T;
  ratings?:
    | T
    | {
        averageRating?:
          | T
          | {
              taste?: T;
              presentation?: T;
              portionSize?: T;
            };
        recommendationPercentage?: T;
        totalReviews?: T;
        popularTags?:
          | T
          | {
              tag?: T;
              count?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ratings_select".
 */
export interface RatingsSelect<T extends boolean = true> {
  user?: T;
  ratingType?: T;
  vendor?: T;
  menuItem?: T;
  vendorRating?:
    | T
    | {
        foodQuality?: T;
        service?: T;
        value?: T;
        atmosphere?: T;
        recommend?: T;
      };
  menuItemRating?:
    | T
    | {
        taste?: T;
        presentation?: T;
        portionSize?: T;
        recommend?: T;
      };
  comment?: T;
  tags?: T;
  images?:
    | T
    | {
        image?: T;
        caption?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}